<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tvz.ntpr.api.repo.UserRepository">
    <resultMap id="base" type="tvz.ntpr.api.entity.User">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="password_salt" jdbcType="VARCHAR" property="passwordSalt"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
        <result column="user_uuid" jdbcType="VARCHAR" property="userUuid"/>
    </resultMap>

    <insert id="create" parameterType="tvz.ntpr.api.entity.User" keyProperty="id">
        INSERT
          INTO `user` (
                   `id`,
                   `email`,
                   `username`,
                   `password`,
                   `password_salt`,
                   `role`,
                   `user_uuid`
               )
        VALUES (
                   #{id,jdbcType=VARCHAR},
                   #{email,jdbcType=VARCHAR},
                   #{username,jdbcType=VARCHAR},
                   #{password,jdbcType=VARCHAR},
                   #{passwordSalt,jdbcType=VARCHAR},
                   #{role,jdbcType=VARCHAR},
                   #{userUuid,jdbcType=VARCHAR}
               )
    </insert>

    <update id="update" parameterType="tvz.ntpr.api.entity.User" keyProperty="id">
        UPDATE `user`
           SET `email`         = #{email,jdbcType=VARCHAR},
               `username`      = #{username,jdbcType=VARCHAR},
               `password`      = #{password,jdbcType=VARCHAR},
               `password_salt` = #{passwordSalt,jdbcType=VARCHAR},
               `role`          = #{role,jdbcType=VARCHAR},
               `user_uuid`     = #{userUuid,jdbcType=VARCHAR}
        <where>
               `id` = #{id,jdbcType=VARCHAR}
        </where>
    </update>

    <delete id="deleteById" parameterType="String">
        DELETE
          FROM `user`
        <where>
               `id` = #{id,jdbcType=VARCHAR}
        </where>
    </delete>

    <select id="findById" parameterType="String" resultMap="base">
        SELECT *
          FROM `user`
        <where>
               `id` = #{id,jdbcType=VARCHAR}
        </where>
    </select>

    <select id="findAll" resultType="tvz.ntpr.api.entity.User">
        SELECT *
          FROM `user`
    </select>

    <select id="findByUsername" parameterType="String" resultMap="base">
        SELECT *
          FROM `user`
        <where>
               `username` = #{username,jdbcType=VARCHAR}
        </where>
    </select>

    <select id="findEmailByUserUuid" parameterType="String" resultType="String">
        SELECT `email`
          FROM `user`
        <where>
               `user_uuid` = #{uudi,jdbcType=VARCHAR}
        </where>
    </select>
</mapper>