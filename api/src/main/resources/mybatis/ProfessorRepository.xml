<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tvz.ntpr.api.repo.ProfessorRepository">
    <resultMap id="base" type="tvz.ntpr.api.entity.Professor">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="first_name" jdbcType="VARCHAR" property="firstName"/>
        <result column="last_name" jdbcType="VARCHAR" property="lastName"/>
        <result column="authorized" jdbcType="BOOLEAN" property="authorized"/>
        <result column="full_name" jdbcType="VARCHAR" property="name"/>
    </resultMap>

    <insert id="create" parameterType="tvz.ntpr.api.entity.Professor" keyProperty="id">
        INSERT
          INTO `professor` (
                   `id`,
                   `first_name`,
                   `last_name`,
                   `authorized`
               )
        VALUES (
                   #{id,jdbcType=VARCHAR},
                   #{firstName,jdbcType=VARCHAR},
                   #{lastName,jdbcType=VARCHAR},
                   #{authorized,jdbcType=BOOLEAN}
               )
    </insert>

    <update id="update" parameterType="tvz.ntpr.api.entity.Professor" keyProperty="id">
        UPDATE `professor`
           SET `first_name` = #{firstName,jdbcType=VARCHAR},
               `last_name`  = #{lastName,jdbcType=VARCHAR},
               `authorized` = #{professor,jdbcType=BOOLEAN}
        <where>
               `id` = #{id,jdbcType=VARCHAR}
        </where>
    </update>

    <delete id="deleteById" parameterType="String">
        DELETE
          FROM `professor`
        <where>
               `id` = #{id,jdbcType=VARCHAR}
        </where>
    </delete>

    <select id="findById" parameterType="String" resultMap="base">
        SELECT *,
               CONCAT(`p`.`first_name`, ' ', `p`.`last_name`, ' (', `u`.`username`, ')') AS full_name
          FROM `professor` AS `p`
          JOIN `user` AS `u` ON `u`.`user_uuid` = `p`.`id`
        <where>
               `p`.`id` = #{id,jdbcType=VARCHAR}
        </where>
    </select>

    <select id="findAll" resultType="tvz.ntpr.api.entity.Professor">
        SELECT *
          FROM `professor`
    </select>
    
    <select id="findAllUnauthorized" resultType="tvz.ntpr.api.entity.Professor">
        SELECT *
          FROM `professor`
        <where>
               `authorized` = FALSE
        </where>
    </select>

    <update id="authorize" parameterType="String" keyProperty="id">
        UPDATE `professor`
           SET `authorized` = TRUE
        <where>
               `id` = #{id,jdbcType=VARCHAR}
        </where>
    </update>
</mapper>